name: ArgoCD Sync

on:
  push:
    branches: [ main ]
    paths:
      - 'k8s-gcp/argocd/**'
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: 'Docker image tag to sync'
        required: true
        type: string
      ENVIRONMENT:
        description: 'Environment to sync (dev/prod)'
        required: false
        type: string
        default: 'dev'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-northeast3
  GKE_CLUSTER_NAME: microservices-cluster
  NAMESPACE: microservices

jobs:
  argocd-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install GKE auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Get GKE credentials
        run: |
          set -euo pipefail
          gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --region ${GCP_REGION} --project ${GCP_PROJECT_ID}

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Get ArgoCD admin password
        run: |
          ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          echo "ARGOCD_PASSWORD=$ARGOCD_PASSWORD" >> $GITHUB_ENV

      - name: Get ArgoCD server URL
        run: |
          ARGOCD_SERVER=$(kubectl -n argocd get svc argocd-server-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "ARGOCD_SERVER=$ARGOCD_SERVER" >> $GITHUB_ENV

      - name: Login to ArgoCD
        env:
          ARGOCD_OPTS: "--insecure --grpc-web --plaintext"
        run: |
          set -euo pipefail
          echo "y" | argocd login "$ARGOCD_SERVER" \
            --username admin \
            --password "$ARGOCD_PASSWORD" \
            --insecure --grpc-web --plaintext

      - name: Update Application with new image tag
        run: |
          set -euo pipefail
          ENV="${{ github.event.inputs.ENVIRONMENT || 'dev' }}"
          APP_NAME="user-service-${ENV}"
          
          echo "Updating ${APP_NAME} with image tag: ${{ github.event.inputs.IMAGE_TAG }}"
          
          # Update the application source parameters
          argocd app set ${APP_NAME} --helm-set image.tag=${{ github.event.inputs.IMAGE_TAG }}
          
          # Sync the application
          argocd app sync ${APP_NAME} --force

      - name: Wait for sync completion
        run: |
          ENV="${{ github.event.inputs.ENVIRONMENT || 'dev' }}"
          APP_NAME="user-service-${ENV}"
          argocd app wait ${APP_NAME} --timeout 300

      - name: Get application status
        run: |
          ENV="${{ github.event.inputs.ENVIRONMENT || 'dev' }}"
          APP_NAME="user-service-${ENV}"
          argocd app get ${APP_NAME}
